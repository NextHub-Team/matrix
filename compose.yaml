services:
  synapse:
    image: ghcr.io/element-hq/synapse:latest
    container_name: synapse
    user: 1000:1000
    ports:
      - 8448:8448/tcp
      - ${SYNAPSE_HTTP_PORT}:${SYNAPSE_HTTP_PORT}
    hostname: synapse-server
    stdin_open: true
    env_file:
      - .env
    tty: true
    volumes:
      - ./data:/data
      - ./data/logs/synapse.log:/data/logs/synapse.log
    healthcheck:
      test:
        - CMD-SHELL
        - curl --fail --silent --show-error
          'http://${SYNAPSE_SERVER_NAME}:${SYNAPSE_HTTP_PORT}/_matrix/client/versions'
          || exit 1
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    depends_on:
      synapse-db:
        condition: service_healthy
    networks:
      - default
  synapse-db:
    container_name: synapse-db
    hostname: synapse-db-server
    image: postgres:latest
    expose:
      - 5432
    env_file:
      - .env
    volumes:
      - ./data/postgres:/data/postgres
      - /etc/localtime:/etc/localtime:ro # Mount the host's time configuration
    healthcheck:
      test:
        - CMD-SHELL
        - sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    networks:
      - default
  well-known:
    image: nginx:latest
    container_name: synapse-well-known
    hostname: synapse-wellknown-server
    env_file:
      - .env
    volumes:
      - ./data/well-known.conf:/etc/nginx/nginx.conf:ro
      - ./data/ssl:/etc/ssl/certs
    ports:
      - ${WELL_KNOWN_HTTP_PORT}:443
    depends_on:
      synapse:
        condition: service_healthy
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-k",
          "-f",
          "https://${SYNAPSE_SERVER_NAME}:${WELL_KNOWN_HTTP_PORT}/healthcheck",
        ]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - default
  # certbot:
  #   image: certbot/certbot:latest # Use the latest Certbot image
  #   profiles:
  #     - certbot # Assign the service to the 'certbot' profile for selective startup
  #   container_name: certbot # Name the container 'certbot'
  #   hostname: certbot-server # Set the internal hostname of the container to 'certbot-server'
  #   volumes:
  #     - ./data/ssl:/etc/letsencrypt # Mount the directory to store Let's Encrypt certificates
  #     - ./data/ssl/logs:/var/log/letsencrypt/ # Mount the directory to store Certbot logs
  #   command: certonly --standalone --force-renewal --email ${TTL_EMAIL} -d
  #     ${SYNAPSE_SERVER_NAME} -d ${SYNAPSE_SERVER_NAME}  --agree-tos
  #   networks:
  #     - default # Connect this service to the default network (sygnal-network)
  #   ports:
  #     - 80:80 # Expose port 80 externally to handle the HTTP challenge for certificate generation and renewal
networks:
  default:
    name: synapse-network
